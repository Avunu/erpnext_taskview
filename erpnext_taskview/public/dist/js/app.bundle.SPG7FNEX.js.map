{
  "version": 3,
  "sources": ["../../../../../apps/erpnext_taskview/erpnext_taskview/public/js/app.bundle.js"],
  "sourcesContent": ["frappe.provide(\"frappe.views\");\n\nfrappe.views.TaskViewSelect = class TaskViewSelect extends frappe.views.ListViewSelect {\n    setup_views() {\n        // Start by calling the original setup_views to get the initial views object\n        super.setup_views();\n\n        let views = {\n            Task: {\n                condition: this.doctype === \"Task\",\n                // action: () => this.set_route(\"task\"),\n                action: () => {\n                    console.log(\"Task view selected\");\n                    console.log(this);\n                    // setting the route makes the page reload and list_view_select errors out and things break, so let's render the view without changing the route\n                    // Instantiate the custom TaskView\n                    this.task_view = new frappe.views.TaskView({\n                        doctype: this.doctype,\n                        parent: this.page.main,\n                        page: this.page,\n                        // the data already loaded with the default List view\n                        data: this.list_view.data,\n                    });\n\n                    // Render the TaskView\n                    this.task_view.render_list();\n                },\n            },\n            List: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"list\"),\n\t\t\t},\n\t\t\tReport: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"report\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tconst reports = this.get_reports();\n\t\t\t\t\tlet default_action = {};\n\t\t\t\t\t// Only add action if current route is not report builder\n\t\t\t\t\tif (frappe.get_route().length > 3) {\n\t\t\t\t\t\tdefault_action = {\n\t\t\t\t\t\t\tlabel: __(\"Report Builder\"),\n\t\t\t\t\t\t\taction: () => this.set_route(\"report\"),\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tthis.setup_dropdown_in_sidebar(\"Report\", reports, default_action);\n\t\t\t\t},\n\t\t\t},\n\t\t\tDashboard: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"dashboard\"),\n\t\t\t},\n\t\t\tCalendar: {\n\t\t\t\tcondition: frappe.views.calendar[this.doctype],\n\t\t\t\taction: () => this.set_route(\"calendar\", \"default\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tthis.get_calendars().then((calendars) => {\n\t\t\t\t\t\tthis.setup_dropdown_in_sidebar(\"Calendar\", calendars);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t},\n\t\t\tGantt: {\n\t\t\t\tcondition: frappe.views.calendar[this.doctype],\n\t\t\t\taction: () => this.set_route(\"gantt\"),\n\t\t\t},\n\t\t\tInbox: {\n\t\t\t\tcondition: this.doctype === \"Communication\" && frappe.boot.email_accounts.length,\n\t\t\t\taction: () => this.set_route(\"inbox\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tconst accounts = this.get_email_accounts();\n\t\t\t\t\tlet default_action;\n\t\t\t\t\tif (has_common(frappe.user_roles, [\"System Manager\", \"Administrator\"])) {\n\t\t\t\t\t\tdefault_action = {\n\t\t\t\t\t\t\tlabel: __(\"New Email Account\"),\n\t\t\t\t\t\t\taction: () => frappe.new_doc(\"Email Account\"),\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tthis.setup_dropdown_in_sidebar(\"Inbox\", accounts, default_action);\n\t\t\t\t},\n\t\t\t},\n\t\t\tImage: {\n\t\t\t\tcondition: this.list_view.meta.image_field,\n\t\t\t\taction: () => this.set_route(\"image\"),\n\t\t\t},\n\t\t\tTree: {\n\t\t\t\tcondition:\n\t\t\t\t\tfrappe.treeview_settings[this.doctype] ||\n\t\t\t\t\tfrappe.get_meta(this.doctype).is_tree,\n\t\t\t\taction: () => this.set_route(\"tree\"),\n\t\t\t},\n\t\t\tKanban: {\n\t\t\t\tcondition: this.doctype != \"File\",\n\t\t\t\taction: () => this.setup_kanban_boards(),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tfrappe.views.KanbanView.get_kanbans(this.doctype).then((kanbans) =>\n\t\t\t\t\t\tthis.setup_kanban_switcher(kanbans)\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t},\n\t\t\tMap: {\n\t\t\t\tcondition:\n\t\t\t\t\tthis.list_view.settings.get_coords_method ||\n\t\t\t\t\t(this.list_view.meta.fields.find((i) => i.fieldname === \"latitude\") &&\n\t\t\t\t\t\tthis.list_view.meta.fields.find((i) => i.fieldname === \"longitude\")) ||\n\t\t\t\t\tthis.list_view.meta.fields.find(\n\t\t\t\t\t\t(i) => i.fieldname === \"location\" && i.fieldtype == \"Geolocation\"\n\t\t\t\t\t),\n\t\t\t\taction: () => this.set_route(\"map\"),\n\t\t\t},\n\t\t};\n\n        let ammended_views = frappe.views.view_modes;\n        // put the TaskView at the start of the list\n        ammended_views.unshift(\"Task\");\n\n        ammended_views.forEach((view) => {\n\t\t\tif (views[view] && this.current_view !== view && views[view].condition) {\n\t\t\t\tthis.add_view_to_menu(view, views[view].action);\n\t\t\t}\n\n\t\t\tif (views[view] && this.current_view == view) {\n\t\t\t\tviews[view].current_view_handler && views[view].current_view_handler();\n\t\t\t}\n\t\t});\n\n        // WHAT DOES THIS DO?\n        // this.task_view_select = new frappe.views.TaskViewSelect({\n        //     doctype: this.doctype,\n        //     parent: this.page.main,\n        //     page: this\n        // });\n\n    }\n\n\n\n    // setup_views() {\n    //     super.setup_views();\n    //     this.task_view_select = new frappe.views.TaskViewSelect({\n    //         doctype: this.doctype,\n    //         parent: this.page.main,\n    //         page: this\n    //     });\n    // }\n};\n\n\n// frappe.router.list_views.push(\"task-view\");\n// frappe.router.list_views_route[\"task-view\"] = \"TaskView\";\n\n// console.log(frappe.router);\n\n\n// frappe.router.add_route(\"task-view\", () => {\n//     let view = new frappe.views.TaskView({\n//         doctype: \"Task\", // or this.doctype\n//         parent: frappe.container.page,\n//     });\n//     view.render();\n// });\n\n\nfrappe.views.TaskView = class TaskView extends frappe.views.ListView {\n    setup_defaults() {\n        super.setup_defaults();\n        this.page_title = __(\"Task View\");\n        this.page_name = \"task-view\";\n        this.show_hide_filters = false;\n    }\n\n    setup_page() {\n        super.setup_page();\n        console.log(this);\n        this.page.set_primary_action(__(\"New Task\"), () => {\n            frappe.new_doc(\"Task\");\n        });\n    }\n\n    show_skeleton() {}\n\n    hide_skeleton() {}\n    \n    render_list() {\n\t\t// clear rows\n\t\t// this.$result.find(\".list-row-container\").remove();\n\n        console.log(this)\n\n\t\t// if (this.data.length > 0) {\n\t\t// \t// append rows\n\t\t// \tconsole.log(this.data);\n\t\t// }\n\t}\n\n    // render() {\n    //     super.render();\n    //     this.render_list();\n    // }\n};\n\n// Override the global ListViewSelect with TaskViewSelect\nfrappe.views.ListViewSelect = frappe.views.TaskViewSelect;\n"],
  "mappings": "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",
  "names": []
}
